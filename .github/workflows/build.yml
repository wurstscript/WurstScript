name: CI (build & test)

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Gradle build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    defaults:
      run:
        working-directory: de.peeeq.wurstscript

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for your JGit version/describe

      - name: Setup Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests
        run: ./gradlew test --no-daemon --stacktrace

      # Build slim jlink image + package for the *current runner OS*
      - name: Package slim runtime
        run: ./gradlew checksumSlimCompilerDist --no-daemon --stacktrace

      - name: Upload packaged artifact (per-OS)
        uses: actions/upload-artifact@v4
        with:
          name: wurst-compiler-${{ matrix.os }}
          path: |
            de.peeeq.wurstscript/build/releases/*.zip
            de.peeeq.wurstscript/build/releases/*.tar.gz
            de.peeeq.wurstscript/build/releases/*.sha256
